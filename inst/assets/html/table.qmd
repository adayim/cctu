---
params:
    file_name: "filename"
    title: "caption
---
```{r}
library(flextable)

set_flextable_defaults(
  font.family = "Arial",
  font.size = 10,
  font.color = "black",
  text.align = "left",
  padding = 0,
  padding.bottom = 0,
  padding.top = 0,
  padding.left = 0,
  padding.right = 0,
  border.color = "black",
  # border.width = 0.75,
  line_spacing = 1,
  table.layout = "autofit"
)

xml_file <- read_xml(params$file_name)

rows <- xml_find_all(xml_file, ".//tr")
# Parse each row into a list with cell values and style (if any)
table_data <- lapply(rows, function(row) {
  cells <- xml_find_all(row, ".//th | .//td")
  values <- xml_text(cells)
  
  # Try to extract style from the first <td> if it exists
  first_td <- xml_find_first(row, ".//td")
  style <- if (!is.na(first_td)) xml_attr(first_td, "style") else NA
  
  # Append style to the values
  c(values, style)
})

# Convert to a data frame
df <- as.data.frame(do.call(rbind, table_data))

styles <- df[-1, ncol(df)]
colnames(df) <- df[1, -ncol(df)]
df <- df[-1, -ncol(df)]

qflextable(df) |> 
  align(align = "center", part = "all") |> 
  align(i = grepl("firstleft", styles), j = 1, align = "left") |> 
  bold(bold = TRUE, part = "header") |> 
  bold(i = grepl("bold", styles), j = 1) |> 
  merge_h(i = grepl("span", styles)) |> 
  padding(i = grep("indent", styles), j = 1, padding.left = 2) |> 
  set_caption(caption = params$title)
  
```

