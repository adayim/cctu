% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/macro_utils.R
\name{apply_macro_dict}
\alias{apply_macro_dict}
\title{Apply DLU/CLU file to the data frame}
\usage{
apply_macro_dict(
  data,
  dlu,
  clu = NULL,
  date_format = "\%d/\%m/\%Y",
  clean_names = TRUE,
  rm_empty = getOption("cctu_rm_empty", default = "both")
)
}
\arguments{
\item{data}{Data frame to be applied.}

\item{dlu}{Data frame of DLU}

\item{clu}{Data frame of CLU, see details.}

\item{date_format}{Date format to be converted, default is `\%d/\%m/\%Y`.}

\item{clean_names}{Conver variable name to lower case (default), this will also change the
values in the DLU as well. See \code{\link{clean_names}} for details.}

\item{rm_empty}{Remove empty \code{"rows"}, \code{"cols"}, or \code{"both"} (default),
 or not \code{"none"}. The \code{\link{remove_blank_rows_cols}} function will be
 used to clean the empty rows and/or columns. If the data is large, this will
 take a long time, should be set to \code{"none"} in this case. Use
\code{options(cctu_rm_empty = "none")} to set global options.}
}
\value{
A data.table object.
}
\description{
The variable label attribute will be applied to the data frame from the DLU file.
}
\details{
## Overview  

This function first convert the data to a \code{\link[data.table]{data.table}}.
This is to avoid the variable attributes dropped by base R functions. Then it will use
the dlu file to convert the data into corresponding variable types. After the conversion
of the data, variable and value label attribute will be created for the variable, 
see \code{\link{var_lab}}) and \code{\link{val_lab}}.   

User can use \code{\link{lab2val}} to conver value labels of the data to values if the 
value label is desired. If the \code{clean_names} is set to \code{TRUE}, the data name
 and the dl/clu will be cleaned, including the question names in the dlu. The cleaned dlu data
will be stored in the \code{cctu} environment. You can change this with \code{\link{set_dlu}}
function, but it is user's responsibility to make sure the variable name in the dataset
matches the short code in the dlu file, see \code{\link{set_dlu}} more details. 

Please use \code{\link{get_dlu}} to get the dlu used cleaned by \code{apply_macro_dict} or use 
\code{\link{sep_dlu}} to clean it. This function uses \code{\link{sep_dlu}} to clean the DLU.


## Variable conversion based on DLU type  

\itemize{
  \item{IntegerData}: Convert to numeric.
  \item{Real}: Convert to numeric.
  \item{Category}: If there are any non-numeric characters in the variable, no conversion
will be performed, otherwise convert to numeric.
  \item{Date}: Convert data date format with \code{\link{as.Date}}. The \code{date_format}
will be used to feed the \code{\link{as.Date}} function during the conversion.
  \item{Text}: Convert to character.
}

## CLU data requirements  

The CLU file contains three columns:
\itemize{
  \item{ShortCode}: Variable name of the downloaded data.
  \item{CatCode}: Category values, it represents the numeric code for an item in the CRF.
  \item{CatValue}: Label of the category values, for example.
}
}
\examples{

# Read MACRO data
dt <- read.csv(system.file("extdata", "pilotdata.csv", package="cctu"),
               colClasses = "character")
dlu <- read.csv(system.file("extdata", "pilotdata_dlu.csv", package="cctu"))
clu <- read.csv(system.file("extdata", "pilotdata_clu.csv", package="cctu"))

# Create subjid
dt$subjid <- substr(dt$USUBJID, 8, 11)

df <- apply_macro_dict(dt, dlu = dlu, clu = clu, clean_names = FALSE)

# Following can give you the same dlu file used by apply_macro_dict
dlu <- sep_dlu(dlu, clean_names = FALSE)

# Extract data from Lab form
lb <- extract_form(df, "Lab")

# Extract screening visit data from lab form
lb_base <- extract_form(df, "Lab", visit = "SCREENING")
}
\seealso{
\code{\link{var_lab}} \code{\link{val_lab}} \code{\link{sep_dlu}} \code{\link{set_dlu}}
 \code{\link[data.table]{data.table}} \code{\link{clean_names}} \code{\link{read_data}}
 \code{\link{remove_blank_rows_cols}} \code{\link{lab2val}} \code{\link{get_dlu}}
}
