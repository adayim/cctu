# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master, dev, adayim-master]
    paths-ignore:
        - 'tests/testthat/_snaps'
  pull_request:
    branches: [main, master, dev]
    paths-ignore:
        - 'tests/testthat/_snaps'
  workflow_dispatch:
    branches: [main, master, dev]

name: R-CMD-check

permissions:
  contents: write
  pull-requests: write
  actions: write


#permissions: read-all

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    if:  github.actor != 'github-actions[bot]'
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v4




      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - uses: r-lib/actions/setup-tinytex@v2



      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran", "--no-multiarch"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}


      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: snapshot_archive-${{ matrix.config.os }}-${{ matrix.config.r }}
          path: check/cctu.Rcheck/tests/testthat/_snaps
          overwrite: true

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Upload source package
        if: success() && runner.os == 'macOS' && github.event_name != 'pull_request' && github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v4
        with:
          name: package_tarball
          path: check/*.tar.gz

  Snaps_Update:
    if: ${{ always() }}
    needs: R-CMD-check

    runs-on: ubuntu-latest

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v4

      - name: grab the testing artifact
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          merge-multiple: true
          path: tests/testthat/_snaps
      - name: Set as safe for following git commands
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.WORKFLOW }}
          commit-message: Automatic update of snaps
          author: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          signoff: false
          branch: auto-detected-repo-updates
          delete-branch: true
          title: 'Automatic update of snaps'
          body: |
            - Auto-generated by [create-pull-request][1]

            [1]: https://github.com/peter-evans/create-pull-request
          draft: false
      - name: Check outputs
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"
